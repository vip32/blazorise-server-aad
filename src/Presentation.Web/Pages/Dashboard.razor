@inject IHttpContextAccessor ContextAccessor
@*@inject ITokenAcquisition tokenAcquisition*@
@page "/"
<Heading Size="HeadingSize.Is1" Margin="Margin.Is3.FromBottom">Blazorise</Heading>

<Paragraph>
    Blazorise is a component library built on top of Blazor and CSS frameworks like <Blazorise.Link To="https://getbootstrap.com/" Target="Target.Blank">Bootstrap</Blazorise.Link>, <Blazorise.Link To="https://bulma.io/" Target="Target.Blank">Bulma</Blazorise.Link>, <Blazorise.Link To="https://ant.design/" Target="Target.Blank">Ant Design</Blazorise.Link>, <Blazorise.Link To="https://efraa.github.io/eFrolic/" Target="Target.Blank">eFrolic</Blazorise.Link> and <Blazorise.Link To="http://daemonite.github.io/material/" Target="Target.Blank">Material</Blazorise.Link>. It can be used to build responsive, single-page web applications.
</Paragraph>

<Alert Color="Color.Info" Visible="true">
    <Heading Size="HeadingSize.Is4" TextColor="TextColor.Success">
        Note:
    </Heading>
    <Paragraph>
        This is a demo application for Blazorise used to show basic example for most of the components and extensions.
    </Paragraph>
    <Paragraph>
        Full source code for this demo can be found on <Blazorise.Link To="https://github.com/stsrki/Blazorise/tree/master/Demos/Blazorise.Demo" Target="Target.Blank">GitHub</Blazorise.Link>.
    </Paragraph>
    <Paragraph>
        If you wish to learn more about Blazorise please go to the official <Blazorise.Link To="https://blazorise.com/docs/" Target="Target.Blank">documentation</Blazorise.Link>.
    </Paragraph>
</Alert>

<Paragraph>
    On the left sidebar you can see the Blazorise components and extensions in action.
</Paragraph>
<br />
<Paragraph>
    <strong> Demo application for</strong>: Blazorise @($"v{typeof( Blazorise.BaseComponent ).Assembly.GetName().Version.ToString( 3 )}")
</Paragraph>

<ul>
    <li>
        ====================== HTTP =============================================
    </li>
    <li>
        user: @ContextAccessor.HttpContext.User.Identity.Name
    </li>
    <li>
        isAuthenticated: @ContextAccessor.HttpContext.User.Identity.IsAuthenticated
    </li>
    <li>
        Role: Editor=@ContextAccessor.HttpContext.User.IsInRole("Editor")<br />
        Role: Administrator=@ContextAccessor.HttpContext.User.IsInRole("Administrator")
    </li>
    @*<li>
        <AuthorizeView Roles="Editor">
            https://docs.microsoft.com/en-us/aspnet/core/blazor/security/?view=aspnetcore-3.1#authorization
            Role: You can only see this if you're a Editor.
        </AuthorizeView>
        <AuthorizeView Roles="Administrator">
            Role: You can only see this if you're a Administrator.
        </AuthorizeView>
    </li>*@
    <li>
        Token: @token
    </li>
    <li>
        ====================== CLAIMS =============================================
    </li>
    @foreach (var claim in ContextAccessor.HttpContext.User.Claims.OrderBy(c => c.Type))
    {
        <li>
            @claim.Type : @claim.Value
        </li>
    }
</ul>

@code {
    private string token;

    protected override async Task OnInitializedAsync()
    {
        token = string.Empty; //await tokenAcquisition.GetAccessTokenForUserAsync(new[] { "User.Read" });
    }
}